


  var maxValue = Math.max(
  d3.max(data, function(d) { return percentage(d.male); }),
  d3.max(data, function(d) { return percentage(d.female); })
);

  var xScale = scaleLinear()
  .domain([0, maxValue])
  .range([0, regionWidth])
  .nice();

var xScaleLeft = d3.scaleLinear()
  .domain([0, maxValue])
  .range([regionWidth, 0]);

var xScaleRight = d3.scaleLinear()
  .domain([0, maxValue])
  .range([0, regionWidth]);

var yScale = d3.scaleBand()
  .domain(data.map(function(d) { return d.group; }))
  .range([h,0])
  .round(0.1);

// SET UP AXES
var yAxisLeft = d3.axisRight()
    .scale(yScale)
    .tickSize(4,0)
    .tickPadding(margin.middle-4);

var yAxisRight = d3.axisLeft()
     .scale(yScale)
     .tickSize(4,0)
     .tickFormat('');

var xAxisLeft = d3.axisBottom()
  .scale(xScale.copy().range([pointA, 0]))
  .tickFormat(d3.format('%'));

var xAxisRight = d3.axisBottom()
  .scale(xScale)
  .tickFormat(d3.format('%'));

// MAKE GROUPS FOR EACH SIDE OF CHART
// scale(-1,1) is used to reverse the left side so the bars grow left instead of right
var leftBarGroup = svg.append('g').attr('transform', 'translate(PointA,0)+scale(-1,1)');
var rightBarGroup = svg.append('g').attr('transform', 'translate(PointB,0)');

// DRAW AXES
svg.append('g')
  .attr('class', 'axis y left')
  .attr('transform', 'translate(PointA, 0)')
  .call(yAxisLeft)
  .selectAll('text')
  .style('text-anchor', 'middle');

svg.append('g')
  .attr('class', 'axis y right')
  .attr('transform', 'translate(PointB, 0)')
  .call(yAxisRight);

svg.append('g')
  .attr('class', 'axis x left')
  .attr('transform', 'translate(0, h)')
  .call(xAxisLeft);

svg.append('g')
  .attr('class', 'axis x right')
  .attr('transform', 'translate(pointB, h)')
  .call(xAxisRight);

// DRAW BARS
leftBarGroup.selectAll('.bar.left')
  .data(data)
  .enter().append('rect')
    .attr('class', 'bar left')
    .attr('x', 0)
    .attr('y', function(d) { return yScale(d.group); })
    .attr('width', function(d) { return xScale(percentage(d.male)); })
    .attr('height', yScale.bandwidth());

rightBarGroup.selectAll('.bar.right')
  .data(data)
  .enter().append('rect')
    .attr('class', 'bar right')
    .attr('x', 0)
    .attr('y', function(d) { return yScale(d.group); })
    .attr('width', function(d) { return xScale(percentage(d.female)); })
    .attr('height', yScale.bandwidth());

    return  <div>
            <svg width = "960" height = "600" >
            <g />
            </svg>
            </div>
  }
}

export default PopPyramid